State 0:
prog' -> . prog [ # ]
-- On SET shift to state 1
-- On PRINT shift to state 42
-- On stmt shift to state 44
-- On prog shift to state 46
-- On list(stmt) shift to state 47
-- On EOF reduce production list(stmt) -> 

State 1:
stmt -> SET . IDENT EQ expr [ SET PRINT EOF ]
stmt -> SET . IDENT LP loption(separated_nonempty_list(COMMA,IDENT)) RP EQ expr [ SET PRINT EOF ]
-- On IDENT shift to state 2

State 2:
stmt -> SET IDENT . EQ expr [ SET PRINT EOF ]
stmt -> SET IDENT . LP loption(separated_nonempty_list(COMMA,IDENT)) RP EQ expr [ SET PRINT EOF ]
-- On LP shift to state 3
-- On EQ shift to state 40

State 3:
stmt -> SET IDENT LP . loption(separated_nonempty_list(COMMA,IDENT)) RP EQ expr [ SET PRINT EOF ]
-- On IDENT shift to state 4
-- On separated_nonempty_list(COMMA,IDENT) shift to state 7
-- On loption(separated_nonempty_list(COMMA,IDENT)) shift to state 8
-- On RP reduce production loption(separated_nonempty_list(COMMA,IDENT)) -> 

State 4:
separated_nonempty_list(COMMA,IDENT) -> IDENT . [ RP ]
separated_nonempty_list(COMMA,IDENT) -> IDENT . COMMA separated_nonempty_list(COMMA,IDENT) [ RP ]
-- On COMMA shift to state 5
-- On RP reduce production separated_nonempty_list(COMMA,IDENT) -> IDENT 

State 5:
separated_nonempty_list(COMMA,IDENT) -> IDENT COMMA . separated_nonempty_list(COMMA,IDENT) [ RP ]
-- On IDENT shift to state 4
-- On separated_nonempty_list(COMMA,IDENT) shift to state 6

State 6:
separated_nonempty_list(COMMA,IDENT) -> IDENT COMMA separated_nonempty_list(COMMA,IDENT) . [ RP ]
-- On RP reduce production separated_nonempty_list(COMMA,IDENT) -> IDENT COMMA separated_nonempty_list(COMMA,IDENT) 

State 7:
loption(separated_nonempty_list(COMMA,IDENT)) -> separated_nonempty_list(COMMA,IDENT) . [ RP ]
-- On RP reduce production loption(separated_nonempty_list(COMMA,IDENT)) -> separated_nonempty_list(COMMA,IDENT) 

State 8:
stmt -> SET IDENT LP loption(separated_nonempty_list(COMMA,IDENT)) . RP EQ expr [ SET PRINT EOF ]
-- On RP shift to state 9

State 9:
stmt -> SET IDENT LP loption(separated_nonempty_list(COMMA,IDENT)) RP . EQ expr [ SET PRINT EOF ]
-- On EQ shift to state 10

State 10:
stmt -> SET IDENT LP loption(separated_nonempty_list(COMMA,IDENT)) RP EQ . expr [ SET PRINT EOF ]
-- On MINUS shift to state 11
-- On LP shift to state 12
-- On LET shift to state 13
-- On IDENT shift to state 16
-- On CST shift to state 18
-- On expr shift to state 39

State 11:
expr -> MINUS . expr [ TIMES SET RP PRINT PLUS MINUS IN EOF DIV COMMA ]
-- On MINUS shift to state 11
-- On LP shift to state 12
-- On LET shift to state 13
-- On IDENT shift to state 16
-- On CST shift to state 18
-- On expr shift to state 38

State 12:
expr -> LP . expr RP [ TIMES SET RP PRINT PLUS MINUS IN EOF DIV COMMA ]
-- On MINUS shift to state 11
-- On LP shift to state 12
-- On LET shift to state 13
-- On IDENT shift to state 16
-- On CST shift to state 18
-- On expr shift to state 36

State 13:
expr -> LET . IDENT EQ expr IN expr [ TIMES SET RP PRINT PLUS MINUS IN EOF DIV COMMA ]
-- On IDENT shift to state 14

State 14:
expr -> LET IDENT . EQ expr IN expr [ TIMES SET RP PRINT PLUS MINUS IN EOF DIV COMMA ]
-- On EQ shift to state 15

State 15:
expr -> LET IDENT EQ . expr IN expr [ TIMES SET RP PRINT PLUS MINUS IN EOF DIV COMMA ]
-- On MINUS shift to state 11
-- On LP shift to state 12
-- On LET shift to state 13
-- On IDENT shift to state 16
-- On CST shift to state 18
-- On expr shift to state 33

State 16:
expr -> IDENT . [ TIMES SET RP PRINT PLUS MINUS IN EOF DIV COMMA ]
expr -> IDENT . LP loption(separated_nonempty_list(COMMA,expr)) RP [ TIMES SET RP PRINT PLUS MINUS IN EOF DIV COMMA ]
-- On LP shift to state 17
-- On TIMES reduce production expr -> IDENT 
-- On SET reduce production expr -> IDENT 
-- On RP reduce production expr -> IDENT 
-- On PRINT reduce production expr -> IDENT 
-- On PLUS reduce production expr -> IDENT 
-- On MINUS reduce production expr -> IDENT 
-- On IN reduce production expr -> IDENT 
-- On EOF reduce production expr -> IDENT 
-- On DIV reduce production expr -> IDENT 
-- On COMMA reduce production expr -> IDENT 

State 17:
expr -> IDENT LP . loption(separated_nonempty_list(COMMA,expr)) RP [ TIMES SET RP PRINT PLUS MINUS IN EOF DIV COMMA ]
-- On MINUS shift to state 11
-- On LP shift to state 12
-- On LET shift to state 13
-- On IDENT shift to state 16
-- On CST shift to state 18
-- On separated_nonempty_list(COMMA,expr) shift to state 19
-- On loption(separated_nonempty_list(COMMA,expr)) shift to state 20
-- On expr shift to state 22
-- On RP reduce production loption(separated_nonempty_list(COMMA,expr)) -> 

State 18:
expr -> CST . [ TIMES SET RP PRINT PLUS MINUS IN EOF DIV COMMA ]
-- On TIMES reduce production expr -> CST 
-- On SET reduce production expr -> CST 
-- On RP reduce production expr -> CST 
-- On PRINT reduce production expr -> CST 
-- On PLUS reduce production expr -> CST 
-- On MINUS reduce production expr -> CST 
-- On IN reduce production expr -> CST 
-- On EOF reduce production expr -> CST 
-- On DIV reduce production expr -> CST 
-- On COMMA reduce production expr -> CST 

State 19:
loption(separated_nonempty_list(COMMA,expr)) -> separated_nonempty_list(COMMA,expr) . [ RP ]
-- On RP reduce production loption(separated_nonempty_list(COMMA,expr)) -> separated_nonempty_list(COMMA,expr) 

State 20:
expr -> IDENT LP loption(separated_nonempty_list(COMMA,expr)) . RP [ TIMES SET RP PRINT PLUS MINUS IN EOF DIV COMMA ]
-- On RP shift to state 21

State 21:
expr -> IDENT LP loption(separated_nonempty_list(COMMA,expr)) RP . [ TIMES SET RP PRINT PLUS MINUS IN EOF DIV COMMA ]
-- On TIMES reduce production expr -> IDENT LP loption(separated_nonempty_list(COMMA,expr)) RP 
-- On SET reduce production expr -> IDENT LP loption(separated_nonempty_list(COMMA,expr)) RP 
-- On RP reduce production expr -> IDENT LP loption(separated_nonempty_list(COMMA,expr)) RP 
-- On PRINT reduce production expr -> IDENT LP loption(separated_nonempty_list(COMMA,expr)) RP 
-- On PLUS reduce production expr -> IDENT LP loption(separated_nonempty_list(COMMA,expr)) RP 
-- On MINUS reduce production expr -> IDENT LP loption(separated_nonempty_list(COMMA,expr)) RP 
-- On IN reduce production expr -> IDENT LP loption(separated_nonempty_list(COMMA,expr)) RP 
-- On EOF reduce production expr -> IDENT LP loption(separated_nonempty_list(COMMA,expr)) RP 
-- On DIV reduce production expr -> IDENT LP loption(separated_nonempty_list(COMMA,expr)) RP 
-- On COMMA reduce production expr -> IDENT LP loption(separated_nonempty_list(COMMA,expr)) RP 

State 22:
expr -> expr . PLUS expr [ TIMES RP PLUS MINUS DIV COMMA ]
expr -> expr . MINUS expr [ TIMES RP PLUS MINUS DIV COMMA ]
expr -> expr . TIMES expr [ TIMES RP PLUS MINUS DIV COMMA ]
expr -> expr . DIV expr [ TIMES RP PLUS MINUS DIV COMMA ]
separated_nonempty_list(COMMA,expr) -> expr . [ RP ]
separated_nonempty_list(COMMA,expr) -> expr . COMMA separated_nonempty_list(COMMA,expr) [ RP ]
-- On TIMES shift to state 23
-- On PLUS shift to state 25
-- On MINUS shift to state 29
-- On DIV shift to state 27
-- On COMMA shift to state 31
-- On RP reduce production separated_nonempty_list(COMMA,expr) -> expr 

State 23:
expr -> expr TIMES . expr [ TIMES SET RP PRINT PLUS MINUS IN EOF DIV COMMA ]
-- On MINUS shift to state 11
-- On LP shift to state 12
-- On LET shift to state 13
-- On IDENT shift to state 16
-- On CST shift to state 18
-- On expr shift to state 24

State 24:
expr -> expr . PLUS expr [ TIMES SET RP PRINT PLUS MINUS IN EOF DIV COMMA ]
expr -> expr . MINUS expr [ TIMES SET RP PRINT PLUS MINUS IN EOF DIV COMMA ]
expr -> expr . TIMES expr [ TIMES SET RP PRINT PLUS MINUS IN EOF DIV COMMA ]
expr -> expr TIMES expr . [ TIMES SET RP PRINT PLUS MINUS IN EOF DIV COMMA ]
expr -> expr . DIV expr [ TIMES SET RP PRINT PLUS MINUS IN EOF DIV COMMA ]
-- On TIMES reduce production expr -> expr TIMES expr 
-- On SET reduce production expr -> expr TIMES expr 
-- On RP reduce production expr -> expr TIMES expr 
-- On PRINT reduce production expr -> expr TIMES expr 
-- On PLUS reduce production expr -> expr TIMES expr 
-- On MINUS reduce production expr -> expr TIMES expr 
-- On IN reduce production expr -> expr TIMES expr 
-- On EOF reduce production expr -> expr TIMES expr 
-- On DIV reduce production expr -> expr TIMES expr 
-- On COMMA reduce production expr -> expr TIMES expr 

State 25:
expr -> expr PLUS . expr [ TIMES SET RP PRINT PLUS MINUS IN EOF DIV COMMA ]
-- On MINUS shift to state 11
-- On LP shift to state 12
-- On LET shift to state 13
-- On IDENT shift to state 16
-- On CST shift to state 18
-- On expr shift to state 26

State 26:
expr -> expr . PLUS expr [ TIMES SET RP PRINT PLUS MINUS IN EOF DIV COMMA ]
expr -> expr PLUS expr . [ TIMES SET RP PRINT PLUS MINUS IN EOF DIV COMMA ]
expr -> expr . MINUS expr [ TIMES SET RP PRINT PLUS MINUS IN EOF DIV COMMA ]
expr -> expr . TIMES expr [ TIMES SET RP PRINT PLUS MINUS IN EOF DIV COMMA ]
expr -> expr . DIV expr [ TIMES SET RP PRINT PLUS MINUS IN EOF DIV COMMA ]
-- On TIMES shift to state 23
-- On DIV shift to state 27
-- On SET reduce production expr -> expr PLUS expr 
-- On RP reduce production expr -> expr PLUS expr 
-- On PRINT reduce production expr -> expr PLUS expr 
-- On PLUS reduce production expr -> expr PLUS expr 
-- On MINUS reduce production expr -> expr PLUS expr 
-- On IN reduce production expr -> expr PLUS expr 
-- On EOF reduce production expr -> expr PLUS expr 
-- On COMMA reduce production expr -> expr PLUS expr 

State 27:
expr -> expr DIV . expr [ TIMES SET RP PRINT PLUS MINUS IN EOF DIV COMMA ]
-- On MINUS shift to state 11
-- On LP shift to state 12
-- On LET shift to state 13
-- On IDENT shift to state 16
-- On CST shift to state 18
-- On expr shift to state 28

State 28:
expr -> expr . PLUS expr [ TIMES SET RP PRINT PLUS MINUS IN EOF DIV COMMA ]
expr -> expr . MINUS expr [ TIMES SET RP PRINT PLUS MINUS IN EOF DIV COMMA ]
expr -> expr . TIMES expr [ TIMES SET RP PRINT PLUS MINUS IN EOF DIV COMMA ]
expr -> expr . DIV expr [ TIMES SET RP PRINT PLUS MINUS IN EOF DIV COMMA ]
expr -> expr DIV expr . [ TIMES SET RP PRINT PLUS MINUS IN EOF DIV COMMA ]
-- On TIMES reduce production expr -> expr DIV expr 
-- On SET reduce production expr -> expr DIV expr 
-- On RP reduce production expr -> expr DIV expr 
-- On PRINT reduce production expr -> expr DIV expr 
-- On PLUS reduce production expr -> expr DIV expr 
-- On MINUS reduce production expr -> expr DIV expr 
-- On IN reduce production expr -> expr DIV expr 
-- On EOF reduce production expr -> expr DIV expr 
-- On DIV reduce production expr -> expr DIV expr 
-- On COMMA reduce production expr -> expr DIV expr 

State 29:
expr -> expr MINUS . expr [ TIMES SET RP PRINT PLUS MINUS IN EOF DIV COMMA ]
-- On MINUS shift to state 11
-- On LP shift to state 12
-- On LET shift to state 13
-- On IDENT shift to state 16
-- On CST shift to state 18
-- On expr shift to state 30

State 30:
expr -> expr . PLUS expr [ TIMES SET RP PRINT PLUS MINUS IN EOF DIV COMMA ]
expr -> expr . MINUS expr [ TIMES SET RP PRINT PLUS MINUS IN EOF DIV COMMA ]
expr -> expr MINUS expr . [ TIMES SET RP PRINT PLUS MINUS IN EOF DIV COMMA ]
expr -> expr . TIMES expr [ TIMES SET RP PRINT PLUS MINUS IN EOF DIV COMMA ]
expr -> expr . DIV expr [ TIMES SET RP PRINT PLUS MINUS IN EOF DIV COMMA ]
-- On TIMES shift to state 23
-- On DIV shift to state 27
-- On SET reduce production expr -> expr MINUS expr 
-- On RP reduce production expr -> expr MINUS expr 
-- On PRINT reduce production expr -> expr MINUS expr 
-- On PLUS reduce production expr -> expr MINUS expr 
-- On MINUS reduce production expr -> expr MINUS expr 
-- On IN reduce production expr -> expr MINUS expr 
-- On EOF reduce production expr -> expr MINUS expr 
-- On COMMA reduce production expr -> expr MINUS expr 

State 31:
separated_nonempty_list(COMMA,expr) -> expr COMMA . separated_nonempty_list(COMMA,expr) [ RP ]
-- On MINUS shift to state 11
-- On LP shift to state 12
-- On LET shift to state 13
-- On IDENT shift to state 16
-- On CST shift to state 18
-- On separated_nonempty_list(COMMA,expr) shift to state 32
-- On expr shift to state 22

State 32:
separated_nonempty_list(COMMA,expr) -> expr COMMA separated_nonempty_list(COMMA,expr) . [ RP ]
-- On RP reduce production separated_nonempty_list(COMMA,expr) -> expr COMMA separated_nonempty_list(COMMA,expr) 

State 33:
expr -> expr . PLUS expr [ TIMES PLUS MINUS IN DIV ]
expr -> expr . MINUS expr [ TIMES PLUS MINUS IN DIV ]
expr -> expr . TIMES expr [ TIMES PLUS MINUS IN DIV ]
expr -> expr . DIV expr [ TIMES PLUS MINUS IN DIV ]
expr -> LET IDENT EQ expr . IN expr [ TIMES SET RP PRINT PLUS MINUS IN EOF DIV COMMA ]
-- On TIMES shift to state 23
-- On PLUS shift to state 25
-- On MINUS shift to state 29
-- On IN shift to state 34
-- On DIV shift to state 27

State 34:
expr -> LET IDENT EQ expr IN . expr [ TIMES SET RP PRINT PLUS MINUS IN EOF DIV COMMA ]
-- On MINUS shift to state 11
-- On LP shift to state 12
-- On LET shift to state 13
-- On IDENT shift to state 16
-- On CST shift to state 18
-- On expr shift to state 35

State 35:
expr -> expr . PLUS expr [ TIMES SET RP PRINT PLUS MINUS IN EOF DIV COMMA ]
expr -> expr . MINUS expr [ TIMES SET RP PRINT PLUS MINUS IN EOF DIV COMMA ]
expr -> expr . TIMES expr [ TIMES SET RP PRINT PLUS MINUS IN EOF DIV COMMA ]
expr -> expr . DIV expr [ TIMES SET RP PRINT PLUS MINUS IN EOF DIV COMMA ]
expr -> LET IDENT EQ expr IN expr . [ TIMES SET RP PRINT PLUS MINUS IN EOF DIV COMMA ]
-- On TIMES shift to state 23
-- On PLUS shift to state 25
-- On MINUS shift to state 29
-- On DIV shift to state 27
-- On SET reduce production expr -> LET IDENT EQ expr IN expr 
-- On RP reduce production expr -> LET IDENT EQ expr IN expr 
-- On PRINT reduce production expr -> LET IDENT EQ expr IN expr 
-- On IN reduce production expr -> LET IDENT EQ expr IN expr 
-- On EOF reduce production expr -> LET IDENT EQ expr IN expr 
-- On COMMA reduce production expr -> LET IDENT EQ expr IN expr 

State 36:
expr -> expr . PLUS expr [ TIMES RP PLUS MINUS DIV ]
expr -> expr . MINUS expr [ TIMES RP PLUS MINUS DIV ]
expr -> expr . TIMES expr [ TIMES RP PLUS MINUS DIV ]
expr -> expr . DIV expr [ TIMES RP PLUS MINUS DIV ]
expr -> LP expr . RP [ TIMES SET RP PRINT PLUS MINUS IN EOF DIV COMMA ]
-- On TIMES shift to state 23
-- On RP shift to state 37
-- On PLUS shift to state 25
-- On MINUS shift to state 29
-- On DIV shift to state 27

State 37:
expr -> LP expr RP . [ TIMES SET RP PRINT PLUS MINUS IN EOF DIV COMMA ]
-- On TIMES reduce production expr -> LP expr RP 
-- On SET reduce production expr -> LP expr RP 
-- On RP reduce production expr -> LP expr RP 
-- On PRINT reduce production expr -> LP expr RP 
-- On PLUS reduce production expr -> LP expr RP 
-- On MINUS reduce production expr -> LP expr RP 
-- On IN reduce production expr -> LP expr RP 
-- On EOF reduce production expr -> LP expr RP 
-- On DIV reduce production expr -> LP expr RP 
-- On COMMA reduce production expr -> LP expr RP 

State 38:
expr -> expr . PLUS expr [ TIMES SET RP PRINT PLUS MINUS IN EOF DIV COMMA ]
expr -> expr . MINUS expr [ TIMES SET RP PRINT PLUS MINUS IN EOF DIV COMMA ]
expr -> expr . TIMES expr [ TIMES SET RP PRINT PLUS MINUS IN EOF DIV COMMA ]
expr -> expr . DIV expr [ TIMES SET RP PRINT PLUS MINUS IN EOF DIV COMMA ]
expr -> MINUS expr . [ TIMES SET RP PRINT PLUS MINUS IN EOF DIV COMMA ]
-- On TIMES reduce production expr -> MINUS expr 
-- On SET reduce production expr -> MINUS expr 
-- On RP reduce production expr -> MINUS expr 
-- On PRINT reduce production expr -> MINUS expr 
-- On PLUS reduce production expr -> MINUS expr 
-- On MINUS reduce production expr -> MINUS expr 
-- On IN reduce production expr -> MINUS expr 
-- On EOF reduce production expr -> MINUS expr 
-- On DIV reduce production expr -> MINUS expr 
-- On COMMA reduce production expr -> MINUS expr 

State 39:
expr -> expr . PLUS expr [ TIMES SET PRINT PLUS MINUS EOF DIV ]
expr -> expr . MINUS expr [ TIMES SET PRINT PLUS MINUS EOF DIV ]
expr -> expr . TIMES expr [ TIMES SET PRINT PLUS MINUS EOF DIV ]
expr -> expr . DIV expr [ TIMES SET PRINT PLUS MINUS EOF DIV ]
stmt -> SET IDENT LP loption(separated_nonempty_list(COMMA,IDENT)) RP EQ expr . [ SET PRINT EOF ]
-- On TIMES shift to state 23
-- On PLUS shift to state 25
-- On MINUS shift to state 29
-- On DIV shift to state 27
-- On SET reduce production stmt -> SET IDENT LP loption(separated_nonempty_list(COMMA,IDENT)) RP EQ expr 
-- On PRINT reduce production stmt -> SET IDENT LP loption(separated_nonempty_list(COMMA,IDENT)) RP EQ expr 
-- On EOF reduce production stmt -> SET IDENT LP loption(separated_nonempty_list(COMMA,IDENT)) RP EQ expr 

State 40:
stmt -> SET IDENT EQ . expr [ SET PRINT EOF ]
-- On MINUS shift to state 11
-- On LP shift to state 12
-- On LET shift to state 13
-- On IDENT shift to state 16
-- On CST shift to state 18
-- On expr shift to state 41

State 41:
expr -> expr . PLUS expr [ TIMES SET PRINT PLUS MINUS EOF DIV ]
expr -> expr . MINUS expr [ TIMES SET PRINT PLUS MINUS EOF DIV ]
expr -> expr . TIMES expr [ TIMES SET PRINT PLUS MINUS EOF DIV ]
expr -> expr . DIV expr [ TIMES SET PRINT PLUS MINUS EOF DIV ]
stmt -> SET IDENT EQ expr . [ SET PRINT EOF ]
-- On TIMES shift to state 23
-- On PLUS shift to state 25
-- On MINUS shift to state 29
-- On DIV shift to state 27
-- On SET reduce production stmt -> SET IDENT EQ expr 
-- On PRINT reduce production stmt -> SET IDENT EQ expr 
-- On EOF reduce production stmt -> SET IDENT EQ expr 

State 42:
stmt -> PRINT . expr [ SET PRINT EOF ]
-- On MINUS shift to state 11
-- On LP shift to state 12
-- On LET shift to state 13
-- On IDENT shift to state 16
-- On CST shift to state 18
-- On expr shift to state 43

State 43:
expr -> expr . PLUS expr [ TIMES SET PRINT PLUS MINUS EOF DIV ]
expr -> expr . MINUS expr [ TIMES SET PRINT PLUS MINUS EOF DIV ]
expr -> expr . TIMES expr [ TIMES SET PRINT PLUS MINUS EOF DIV ]
expr -> expr . DIV expr [ TIMES SET PRINT PLUS MINUS EOF DIV ]
stmt -> PRINT expr . [ SET PRINT EOF ]
-- On TIMES shift to state 23
-- On PLUS shift to state 25
-- On MINUS shift to state 29
-- On DIV shift to state 27
-- On SET reduce production stmt -> PRINT expr 
-- On PRINT reduce production stmt -> PRINT expr 
-- On EOF reduce production stmt -> PRINT expr 

State 44:
list(stmt) -> stmt . list(stmt) [ EOF ]
-- On SET shift to state 1
-- On PRINT shift to state 42
-- On stmt shift to state 44
-- On list(stmt) shift to state 45
-- On EOF reduce production list(stmt) -> 

State 45:
list(stmt) -> stmt list(stmt) . [ EOF ]
-- On EOF reduce production list(stmt) -> stmt list(stmt) 

State 46:
prog' -> prog . [ # ]
-- On # accept prog

State 47:
prog -> list(stmt) . EOF [ # ]
-- On EOF shift to state 48

State 48:
prog -> list(stmt) EOF . [ # ]
-- On # reduce production prog -> list(stmt) EOF 

